// This file is @generated by prost-build.
/// A snazzy new shirt!
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Command {
    #[prost(string, tag = "1")]
    pub color: ::prost::alloc::string::String,
    #[prost(enumeration = "command::Operation", tag = "2")]
    pub size: i32,
    #[prost(string, optional, tag = "3")]
    pub value: ::core::option::Option<::prost::alloc::string::String>,
}
/// Nested message and enum types in `Command`.
pub mod command {
    #[derive(
        Clone,
        Copy,
        Debug,
        PartialEq,
        Eq,
        Hash,
        PartialOrd,
        Ord,
        ::prost::Enumeration
    )]
    #[repr(i32)]
    pub enum Operation {
        Get = 0,
        Set = 1,
        Del = 2,
        List = 4,
    }
    impl Operation {
        /// String value of the enum field names used in the ProtoBuf definition.
        ///
        /// The values are not transformed in any way and thus are considered stable
        /// (if the ProtoBuf definition does not change) and safe for programmatic use.
        pub fn as_str_name(&self) -> &'static str {
            match self {
                Operation::Get => "GET",
                Operation::Set => "SET",
                Operation::Del => "DEL",
                Operation::List => "LIST",
            }
        }
        /// Creates an enum from field names used in the ProtoBuf definition.
        pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
            match value {
                "GET" => Some(Self::Get),
                "SET" => Some(Self::Set),
                "DEL" => Some(Self::Del),
                "LIST" => Some(Self::List),
                _ => None,
            }
        }
    }
}
